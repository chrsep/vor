## Docker Compose for development
version: "3"
services:
  vor_app:
    image: chrsep/go-devtools:latest
    container_name: vor_app
    working_dir: /src/vor
    environment:
      # go-devtools docker specific env
      SRC_ENTRYPOINT: /src/vor/pkg/*.go
    volumes:
      - ./apps/vor:/src/vor
    ports:
      - "40000:40000"
      - "8080:8080"
    restart: on-failure
    # Might not be necessary for all projects, but these
    # fixes delve crash on circleci
    security_opt:
      - "apparmor=unconfined"
    cap_add:
      - "SYS_PTRACE"
    env_file:
      - .env

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/dev.dockerfile
    restart: unless-stopped
    depends_on:
      - vor_app
    ports:
      - "8000:443"
    volumes:
      - ./docker/nginx/ssl:/ssl

  minio:
    image: minio/minio:latest
    container_name: vor-minio
    entrypoint: sh
    command: -c 'mkdir -p /data/media && /usr/bin/minio server /data'
    environment:
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
      MINIO_HTTP_TRACE: "/dev/stdout"
    ports:
      - 9000:9000
    volumes:
      - vor-minio:/data
    env_file:
      - .env

  imgproxy:
    image: darthsim/imgproxy:latest
    depends_on:
      - minio
    environment:
      IMGPROXY_USE_S3: "true"
      IMGPROXY_S3_ENDPOINT: http://vor-minio:9000
      TC_AWS_STORAGE_BUCKET:  "media" # S3 bucket for Storage
      # credentials for connecting to minio
      AWS_ACCESS_KEY_ID: "${MINIO_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${MINIO_SECRET_KEY}"

      IMGPROXY_KEY: "${IMGPROXY_KEY}"
      IMGPROXY_SALT: "${IMGPROXY_SALT}"
      IMGPROXY_ENABLE_WEBP_DETECTION: "true"
    env_file:
      - .env

  imgproxy-nginx:
    build:
      context: .
      dockerfile: docker/imgproxy-nginx/prod.dockerfile
    depends_on:
      - imgproxy
    ports:
      - 10000:443

  db:
    image: obserfy/postgres-dev:latest
    container_name: vor-postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: defaultdb
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    volumes:
      - vor:/var/lib/postgresql/data

volumes:
  vor:
  vor-minio:
