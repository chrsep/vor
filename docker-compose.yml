## Docker Compose for development
version: "3"
services:
  vor_app:
    image: chrsep/go-devtools:latest
    container_name: vor_app
    working_dir: /src/vor
    environment:
      # go-devtools docker specific env
      SRC_ENTRYPOINT: /src/vor/pkg/*.go
    volumes:
      - .:/src/vor
    ports:
      - "40000:40000"
      - "8080:8080"
    depends_on:
      - db
      - minio
    # Might not be necessary for all projects, but these
    # fixes delve crash on circleci
    security_opt:
      - "apparmor=unconfined"
    cap_add:
      - "SYS_PTRACE"
    env_file:
      - .env

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/dev.dockerfile
    restart: unless-stopped
    depends_on:
      - vor_app
    ports:
      - "8000:80"

  minio:
    image: minio/minio:latest
    container_name: vor-minio
    entrypoint: sh
    command: -c 'mkdir -p /data/media && /usr/bin/minio server /data'
    environment:
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
      MINIO_HTTP_TRACE: "/dev/stdout"
    ports:
      - 9000:9000
    volumes:
      - vor-minio:/data

  thumbor:
    image: minimalcompact/thumbor:latest
    depends_on:
      - minio
    environment:
      VIRTUAL_HOST: localhost
      # THUMBOR_NUM_PROCESSES control how many processes run inside the container
      # Normally this is set in connection with the number of CPU cores
      # Note however that you can also use the docker-compose scale option to dynamically
      # scale your thumbor instances
      THUMBOR_NUM_PROCESSES: 1
      # this would allow CORS from any origin (you can restrict to specific origins if you want)
      CORS_ALLOW_ORIGIN: "*"
      # returns a webp image if browser Accept headers match
      AUTO_WEBP: "True"
      # We don't use caching, because that will be handled by cloudflare.
      RESULT_STORAGE: thumbor.result_storages.no_storage
      RESULT_STORAGE_STORES_UNSAFE: "True"
      STORAGE: tc_aws.storages.s3_storage
      LOADER: tc_aws.loaders.s3_loader
      TC_AWS_ENDPOINT: http://vor-minio:9000
      TC_AWS_STORAGE_BUCKET:  "media" # S3 bucket for Storage
      # credentials for connecting to minio
      AWS_ACCESS_KEY_ID: "${MINIO_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${MINIO_SECRET_KEY}"
    ports:
      - 9080:80

  db:
    build:
      context: ./docker/postgres/
      dockerfile: dev.dockerfile
    container_name: vor-postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: defaultdb
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    volumes:
      - vor:/var/lib/postgresql/data

volumes:
  vor:
  vor-minio:
