# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Test

on: [ push ]

jobs:
  build-vor-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache deps and gatsby
        uses: actions/cache@v2
        id: cache-deps-and-gatsby
        env:
          cache-name: cache-build-vor
        with:
          path: |
            .yarn
            .pnp.js
            apps/vor/frontend/public
            apps/vor/frontend/.cache
          key: v1-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Dependencies
        if: steps.cache-deps-and-gatsby.outputs.cache-hit != 'true'
        run: yarn workspaces focus vor --production
      - run: yarn workspace vor run build

  build-gaia:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache nextjs and deps
        id: cache-deps
        uses: actions/cache@v2
        env:
          cache-name: cache-build-gaia
        with:
          path: |
            .yarn
            .pnp.js
            apps/gaia/.next
          key: v1-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn workspaces focus gaia --production
      - run: yarn workspace gaia run build

  test-vor-backend:
    runs-on: ubuntu-latest

    services:
      minio:
        image: chrsep/minio:latest
        env:
          MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
          MINIO_SECRET_KEY: wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY
          MINIO_HTTP_TRACE: "/dev/stdout"
        ports:
          - 9000:9000
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: defaultdb
        ports:
          - 5432:5432

    env:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY
      MINIO_ENDPOINT: minio:9000
      MINIO_BUCKET_NAME: media
      MINIO_BUCKET_LOCATION: us-east-1
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
      DB_PORT: 5432

    steps:
      - uses: actions/checkout@v2
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v2
        env:
          cache-name: cache-vor-backend-deps
        with:
          path: |
            apps/vor/vendor
          key: v2-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Go 15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15.3
      - run: cd apps/vor/ && go mod vendor
      - run: |
          cd apps/vor/
          mkdir test_result
          mkdir test_result/go
          PACKAGE_NAMES=$(go list ./...)
          go get gotest.tools/gotestsum && gotestsum --junitfile test_result/go/gotestsum-report.xml -- $PACKAGE_NAMES -v -coverprofile=coverage.txt -covermode=atomic -coverpkg $(go list ./... | grep -v "test" | paste -s -d",")

