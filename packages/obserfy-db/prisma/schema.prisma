generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model areas {
  id                  String                @id @db.Uuid
  curriculum_id       String?               @db.Uuid
  name                String?
  description         String?
  curriculums         curriculums?          @relation(fields: [curriculum_id], references: [id])
  lesson_plan_details lesson_plan_details[]
  observations        observations[]
  subjects            subjects[]
}

model attendances {
  id         String    @id @db.Uuid
  student_id String?   @db.Uuid
  class_id   String?   @db.Uuid
  date       DateTime? @db.Timestamptz(6)
  classes    classes?  @relation(fields: [class_id], references: [id])
  students   students? @relation(fields: [student_id], references: [id])
}

model classes {
  id                  String                @id @db.Uuid
  school_id           String?               @db.Uuid
  name                String?
  start_time          DateTime              @db.Timestamptz(6)
  end_time            DateTime              @db.Timestamptz(6)
  schools             schools?              @relation(fields: [school_id], references: [id])
  attendances         attendances[]
  lesson_plan_details lesson_plan_details[]
  student_to_classes  student_to_classes[]  @ignore
  weekdays            weekdays[]
}

model curriculums {
  id           String    @id @db.Uuid
  name         String?
  descriptions String?
  areas        areas[]
  schools      schools[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model file_to_lesson_plans {
  lesson_plan_details_id String?              @db.Uuid
  file_id                String?              @db.Uuid
  files                  files?               @relation(fields: [file_id], references: [id])
  lesson_plan_details    lesson_plan_details? @relation(fields: [lesson_plan_details_id], references: [id])

  @@ignore
}

model files {
  id                   String                 @id @db.Uuid
  school_id            String?                @db.Uuid
  name                 String?
  object_key           String?
  schools              schools?               @relation(fields: [school_id], references: [id])
  file_to_lesson_plans file_to_lesson_plans[] @ignore
}

model guardian_to_students {
  student_id   String    @db.Uuid
  guardian_id  String    @db.Uuid
  relationship Int?
  guardians    guardians @relation(fields: [guardian_id], references: [id])
  students     students  @relation(fields: [student_id], references: [id])

  @@id([student_id, guardian_id])
}

model guardians {
  id                   String                 @id @db.Uuid
  name                 String
  email                String?
  phone                String?
  note                 String?
  school_id            String?                @db.Uuid
  address              String?
  schools              schools?               @relation(fields: [school_id], references: [id])
  guardian_to_students guardian_to_students[]
  observations         observations[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model image_to_students {
  student_id String?   @db.Uuid
  image_id   String?   @db.Uuid
  images     images?   @relation(fields: [image_id], references: [id])
  students   students? @relation(fields: [student_id], references: [id])

  @@ignore
}

model images {
  id                    String                  @id @db.Uuid
  school_id             String?                 @db.Uuid
  object_key            String?
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  schools               schools?                @relation(fields: [school_id], references: [id])
  image_to_students     image_to_students[]     @ignore
  observation_to_images observation_to_images[] @ignore
  students              students[]
}

model lesson_plan_details {
  id                   String                 @id @db.Uuid
  title                String?
  description          String?
  class_id             String?                @db.Uuid
  repetition_type      BigInt?
  repetition_end_date  DateTime?              @db.Timestamptz(6)
  school_id            String?                @db.Uuid
  area_id              String?                @db.Uuid
  material_id          String?                @db.Uuid
  user_id              String?                @db.Uuid
  areas                areas?                 @relation(fields: [area_id], references: [id])
  classes              classes?               @relation(fields: [class_id], references: [id])
  materials            materials?             @relation(fields: [material_id], references: [id])
  users                users?                 @relation(fields: [user_id], references: [id])
  file_to_lesson_plans file_to_lesson_plans[] @ignore
  lesson_plan_links    lesson_plan_links[]
  lesson_plans         lesson_plans[]
}

model lesson_plan_links {
  id                     String               @id @db.Uuid
  title                  String?
  url                    String?
  image                  String?
  description            String?
  lesson_plan_details_id String?              @db.Uuid
  lesson_plan_details    lesson_plan_details? @relation(fields: [lesson_plan_details_id], references: [id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model lesson_plan_to_students {
  lesson_plan_id String?       @db.Uuid
  student_id     String?       @db.Uuid
  lesson_plans   lesson_plans? @relation(fields: [lesson_plan_id], references: [id])
  students       students?     @relation(fields: [student_id], references: [id])

  @@ignore
}

model lesson_plans {
  id                      String                    @id @db.Uuid
  date                    DateTime                  @db.Timestamptz(6)
  lesson_plan_details_id  String?                   @db.Uuid
  lesson_plan_details     lesson_plan_details?      @relation(fields: [lesson_plan_details_id], references: [id])
  lesson_plan_to_students lesson_plan_to_students[] @ignore
  observations            observations[]
}

model materials {
  id                          String                        @id @db.Uuid
  subject_id                  String?                       @db.Uuid
  name                        String?
  order                       BigInt?
  description                 String?
  subjects                    subjects?                     @relation(fields: [subject_id], references: [id])
  lesson_plan_details         lesson_plan_details[]
  student_material_progresses student_material_progresses[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model observation_to_images {
  observation_id String?       @db.Uuid
  image_id       String?       @db.Uuid
  images         images?       @relation(fields: [image_id], references: [id])
  observations   observations? @relation(fields: [observation_id], references: [id])

  @@ignore
}

model observations {
  id                    String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  student_id            String?                 @db.Uuid
  short_desc            String?
  long_desc             String?
  created_date          DateTime?               @db.Timestamptz(6)
  category_id           String?
  event_time            DateTime?               @db.Timestamptz(6)
  creator_id            String?                 @db.Uuid
  lesson_plan_id        String?                 @db.Uuid
  guardian_id           String?                 @db.Uuid
  area_id               String?                 @db.Uuid
  visible_to_guardians  Boolean                 @default(false)
  areas                 areas?                  @relation(fields: [area_id], references: [id])
  users                 users?                  @relation(fields: [creator_id], references: [id])
  guardians             guardians?              @relation(fields: [guardian_id], references: [id])
  lesson_plans          lesson_plans?           @relation(fields: [lesson_plan_id], references: [id])
  students              students?               @relation(fields: [student_id], references: [id])
  observation_to_images observation_to_images[] @ignore
}

model password_reset_tokens {
  token      String   @id @db.Uuid
  created_at DateTime @db.Timestamptz(6)
  expired_at DateTime @db.Timestamptz(6)
  user_id    String   @db.Uuid
  users      users    @relation(fields: [user_id], references: [id])
}

model progress_reports {
  id           String    @id @db.Uuid
  school_id    String?   @db.Uuid
  title        String?
  period_start DateTime? @db.Timestamptz(6)
  period_end   DateTime? @db.Timestamptz(6)
  schools      schools?  @relation(fields: [school_id], references: [id])
}

model schools {
  id               String             @id @db.Uuid
  name             String?
  invite_code      String?
  curriculum_id    String?            @db.Uuid
  subscription_id  String?            @db.Uuid
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  curriculums      curriculums?       @relation(fields: [curriculum_id], references: [id])
  subscriptions    subscriptions?     @relation(fields: [subscription_id], references: [id])
  classes          classes[]
  files            files[]
  guardians        guardians[]
  images           images[]
  progress_reports progress_reports[]
  students         students[]
  user_to_schools  user_to_schools[]  @ignore
  videos           videos[]
}

model sessions {
  token   String  @id
  user_id String?
}

model student_material_progresses {
  material_id String    @db.Uuid
  student_id  String    @db.Uuid
  stage       BigInt?
  updated_at  DateTime? @db.Timestamptz(6)
  materials   materials @relation(fields: [material_id], references: [id])
  students    students  @relation(fields: [student_id], references: [id])

  @@id([material_id, student_id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model student_to_classes {
  student_id String?   @db.Uuid
  class_id   String?   @db.Uuid
  classes    classes?  @relation(fields: [class_id], references: [id])
  students   students? @relation(fields: [student_id], references: [id])

  @@ignore
}

model students {
  id                          String                        @id @db.Uuid
  name                        String?
  school_id                   String?                       @db.Uuid
  date_of_birth               DateTime?                     @db.Timestamptz(6)
  gender                      Int?
  date_of_entry               DateTime?                     @db.Timestamptz(6)
  note                        String?
  custom_id                   String?
  active                      Boolean                       @default(true)
  profile_pic                 String?
  profile_image_id            String?                       @db.Uuid
  images                      images?                       @relation(fields: [profile_image_id], references: [id])
  schools                     schools?                      @relation(fields: [school_id], references: [id])
  attendances                 attendances[]
  guardian_to_students        guardian_to_students[]
  image_to_students           image_to_students[]           @ignore
  lesson_plan_to_students     lesson_plan_to_students[]     @ignore
  observations                observations[]
  student_material_progresses student_material_progresses[]
  student_to_classes          student_to_classes[]          @ignore
  video_to_students           video_to_students[]           @ignore
}

model subjects {
  id          String      @id @db.Uuid
  area_id     String?     @db.Uuid
  name        String?
  order       BigInt?
  description String?
  areas       areas?      @relation(fields: [area_id], references: [id])
  materials   materials[]
}

model subscriptions {
  id                   String    @id @db.Uuid
  cancel_url           String?
  currency             String?
  email                String?
  event_time           DateTime? @db.Timestamptz(6)
  marketing_consent    Boolean?
  next_bill_date       DateTime? @db.Timestamptz(6)
  status               String?
  subscription_id      String?
  subscription_plan_id String?
  paddle_user_id       String?
  update_url           String?
  schools              schools[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_to_schools {
  school_id String?  @db.Uuid
  user_id   String?  @db.Uuid
  schools   schools? @relation(fields: [school_id], references: [id])
  users     users?   @relation(fields: [user_id], references: [id])

  @@unique([school_id, user_id], name: "user_to_schools_school_id_user_id_key")
  @@ignore
}

model users {
  id                    String                  @id @db.Uuid
  email                 String?                 @unique
  name                  String?
  password              Bytes?
  lesson_plan_details   lesson_plan_details[]
  observations          observations[]
  password_reset_tokens password_reset_tokens[]
  user_to_schools       user_to_schools[]       @ignore
  videos                videos[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model video_to_students {
  student_id String?   @db.Uuid
  video_id   String?   @db.Uuid
  students   students? @relation(fields: [student_id], references: [id])
  videos     videos?   @relation(fields: [video_id], references: [id])

  @@ignore
}

model videos {
  id                String              @id @db.Uuid
  asset_id          String?
  playback_id       String?
  playback_url      String?
  thumbnail_url     String?
  upload_url        String?
  upload_id         String?
  status            String?
  upload_timeout    Int?
  created_at        DateTime?           @db.Timestamptz(6)
  user_id           String?             @db.Uuid
  school_id         String?             @db.Uuid
  schools           schools?            @relation(fields: [school_id], references: [id])
  users             users?              @relation(fields: [user_id], references: [id])
  video_to_students video_to_students[] @ignore
}

model weekdays {
  class_id String  @db.Uuid
  day      BigInt  @default(autoincrement())
  classes  classes @relation(fields: [class_id], references: [id])

  @@id([class_id, day])
}
